{"version":3,"sources":["webpack:///./server/uiserver.js","webpack:///./webpack.config.js"],"names":["express","require","config","path","port","process","env","UI_SERVER_PORT","UI_API_ENDPOINT","app","enableHMR","ENABLE_HMR","console","log","webpack","devMiddleware","hotMiddleware","entry","push","plugins","HotModuleReplacementPlugin","compiler","use","get","req","res","send","JSON","stringify","middleware","static","sendFile","resolve","listen","module","exports","mode","output","filename","__dirname","publicPath","rules","test","exclude","optimization","splitChunks","name","chunks","devtool"],"mappings":"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","file":"server.007c60f8d0c3cb0f2d09.hot-update.js","sourcesContent":["/* eslint linebreak-style: [\"error\", \"windows\"] */\r\nconst express = require('express');\r\nrequire('dotenv').config();\r\nconst path = require('path');\r\n\r\nconst port = process.env.UI_SERVER_PORT || 8000;\r\n// const proxy = require('http-proxy-middleware');\r\n// const apiProxyTarget = process.env.API_PROXY_TARGET;\r\n// if (apiProxyTarget){\r\n//     app.use('/graphql',proxy({target : apiProxyTarget}));\r\n// }\r\nconst UI_API_ENDPOINT = process.env.UI_API_ENDPOINT\r\n    || 'http://localhost:3000/graphql';\r\nconst env = { UI_API_ENDPOINT };\r\n\r\nconst app = express();\r\n\r\nconst enableHMR = (process.env.ENABLE_HMR || 'true') === 'true';\r\nif (enableHMR && (process.env.NODE_ENV !== 'production')) {\r\n    console.log('Adding dev middleware, enabling HMR');\r\n    /* eslint \"global-require\": \"off\" */\r\n    /* eslint \"import/no-extraneous-dependencies\": \"off\" */\r\n    const webpack = require('webpack');\r\n    const devMiddleware = require('webpack-dev-middleware');\r\n    const hotMiddleware = require('webpack-hot-middleware');\r\n    const config = require('../webpack.config.js');\r\n    config.entry.app.push('webpack-hot-middleware/client');\r\n    config.plugins = config.plugins || [];\r\n    config.plugins.push(new webpack.HotModuleReplacementPlugin());\r\n    const compiler = webpack(config);\r\n    app.use(devMiddleware(compiler));\r\n    app.use(hotMiddleware(compiler));\r\n}\r\n\r\napp.get('/env.js', (req, res) => {\r\n    res.send(`window.ENV = ${JSON.stringify(env)}`)\r\n})\r\nconst middleware = express.static('public');\r\napp.use('/', middleware);\r\napp.get('*', (req, res) => {\r\n    res.sendFile(path.resolve('public/index.html'));\r\n});\r\napp.listen(8000, () => { console.log(`UI started on port ${port}`) });","const path = require('path');\r\n\r\nmodule.exports = {\r\n    mode: 'development',\r\n    entry: { app: ['./browser/app.jsx'] },\r\n    output: {\r\n        filename: '[name].bundle.js',\r\n        path: path.resolve(__dirname, 'public'),\r\n        publicPath: '/',\r\n    },\r\n    module: {\r\n        rules: [\r\n            {\r\n                test: /\\.jsx?$/,\r\n                exclude: /node_modules/,\r\n                use: 'babel-loader',\r\n            },\r\n        ],\r\n    },\r\n    optimization: {\r\n        splitChunks: {\r\n            name: 'vendor',\r\n            chunks: 'all',\r\n        }\r\n    },\r\n    devtool: 'source-map'\r\n};"],"sourceRoot":""}